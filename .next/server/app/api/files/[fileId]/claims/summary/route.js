"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/files/[fileId]/claims/summary/route";
exports.ids = ["app/api/files/[fileId]/claims/summary/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_dushyantsingh_Documents_illuminate_rx_copy_src_app_api_files_fileId_claims_summary_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/files/[fileId]/claims/summary/route.ts */ \"(rsc)/./src/app/api/files/[fileId]/claims/summary/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/files/[fileId]/claims/summary/route\",\n        pathname: \"/api/files/[fileId]/claims/summary\",\n        filename: \"route\",\n        bundlePath: \"app/api/files/[fileId]/claims/summary/route\"\n    },\n    resolvedPagePath: \"/Users/dushyantsingh/Documents/illuminate-rx copy/src/app/api/files/[fileId]/claims/summary/route.ts\",\n    nextConfigOutput,\n    userland: _Users_dushyantsingh_Documents_illuminate_rx_copy_src_app_api_files_fileId_claims_summary_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/files/[fileId]/claims/summary/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZmaWxlcyUyRiU1QmZpbGVJZCU1RCUyRmNsYWltcyUyRnN1bW1hcnklMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmZpbGVzJTJGJTVCZmlsZUlkJTVEJTJGY2xhaW1zJTJGc3VtbWFyeSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmZpbGVzJTJGJTVCZmlsZUlkJTVEJTJGY2xhaW1zJTJGc3VtbWFyeSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmR1c2h5YW50c2luZ2glMkZEb2N1bWVudHMlMkZpbGx1bWluYXRlLXJ4JTIwY29weSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZkdXNoeWFudHNpbmdoJTJGRG9jdW1lbnRzJTJGaWxsdW1pbmF0ZS1yeCUyMGNvcHkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDb0Q7QUFDakk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9waGFybWFjeS1iZW5lZml0cy1wbGF0Zm9ybS8/ZmUyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvZHVzaHlhbnRzaW5naC9Eb2N1bWVudHMvaWxsdW1pbmF0ZS1yeCBjb3B5L3NyYy9hcHAvYXBpL2ZpbGVzL1tmaWxlSWRdL2NsYWltcy9zdW1tYXJ5L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9maWxlcy9bZmlsZUlkXS9jbGFpbXMvc3VtbWFyeS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2ZpbGVzL1tmaWxlSWRdL2NsYWltcy9zdW1tYXJ5XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9maWxlcy9bZmlsZUlkXS9jbGFpbXMvc3VtbWFyeS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9kdXNoeWFudHNpbmdoL0RvY3VtZW50cy9pbGx1bWluYXRlLXJ4IGNvcHkvc3JjL2FwcC9hcGkvZmlsZXMvW2ZpbGVJZF0vY2xhaW1zL3N1bW1hcnkvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZmlsZXMvW2ZpbGVJZF0vY2xhaW1zL3N1bW1hcnkvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/files/[fileId]/claims/summary/route.ts":
/*!************************************************************!*\
  !*** ./src/app/api/files/[fileId]/claims/summary/route.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db/index.ts\");\n// File: src/app/api/files/[fileId]/claims/summary/route.ts\n\n\nasync function GET(request, { params }) {\n    try {\n        const { fileId } = params;\n        // Get basic statistics\n        const statsQuery = `\n      SELECT \n        COUNT(*) as total_claims,\n        COUNT(*) FILTER (WHERE validation_status = 'valid') as valid_claims,\n        COUNT(*) FILTER (WHERE validation_status = 'invalid') as invalid_claims,\n        COUNT(*) FILTER (WHERE validation_status = 'warning') as warning_claims,\n        jsonb_build_object(\n          'processed', COUNT(*) FILTER (WHERE processing_status = 'processed'),\n          'pending', COUNT(*) FILTER (WHERE processing_status = 'pending'),\n          'failed', COUNT(*) FILTER (WHERE processing_status = 'failed')\n        ) as processing_stats,\n        COALESCE(SUM((mapped_fields->>'cost')::numeric), 0) as total_cost,\n        COALESCE(AVG((mapped_fields->>'cost')::numeric), 0) as average_cost\n      FROM claim_records\n      WHERE file_id = $1\n    `;\n        // Get validation trends over time\n        const trendsQuery = `\n      WITH daily_stats AS (\n        SELECT \n          DATE_TRUNC('day', created_at) as date,\n          COUNT(*) FILTER (WHERE validation_status = 'valid') as valid,\n          COUNT(*) FILTER (WHERE validation_status = 'invalid') as invalid,\n          COUNT(*) FILTER (WHERE validation_status = 'warning') as warning\n        FROM claim_records\n        WHERE file_id = $1\n        GROUP BY DATE_TRUNC('day', created_at)\n        ORDER BY date ASC\n      )\n      SELECT \n        TO_CHAR(date, 'YYYY-MM-DD') as date,\n        valid,\n        invalid,\n        warning\n      FROM daily_stats\n    `;\n        // Get cost distribution\n        const costDistributionQuery = `\n      WITH ranges AS (\n        SELECT\n          CASE\n            WHEN (mapped_fields->>'cost')::numeric < 100 THEN '0-100'\n            WHEN (mapped_fields->>'cost')::numeric < 500 THEN '100-500'\n            WHEN (mapped_fields->>'cost')::numeric < 1000 THEN '500-1000'\n            ELSE '1000+'\n          END as range,\n          COUNT(*) as count\n        FROM claim_records\n        WHERE file_id = $1 AND mapped_fields->>'cost' IS NOT NULL\n        GROUP BY range\n      )\n      SELECT jsonb_agg(jsonb_build_object(\n        'range', range,\n        'count', count\n      )) as cost_distribution\n      FROM ranges\n    `;\n        // Execute all queries in parallel\n        const [statsResult, trendsResult, costDistResult] = await Promise.all([\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(statsQuery, [\n                fileId\n            ]),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(trendsQuery, [\n                fileId\n            ]),\n            (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(costDistributionQuery, [\n                fileId\n            ])\n        ]);\n        const stats = statsResult.rows[0];\n        const costDistribution = costDistResult.rows[0].cost_distribution || [];\n        // Format response\n        const response = {\n            totalClaims: parseInt(stats.total_claims),\n            validClaims: parseInt(stats.valid_claims),\n            invalidClaims: parseInt(stats.invalid_claims),\n            warningClaims: parseInt(stats.warning_claims),\n            processingStats: stats.processing_stats,\n            costSummary: {\n                totalCost: parseFloat(stats.total_cost),\n                averageCost: parseFloat(stats.average_cost),\n                costDistribution\n            },\n            validationTrends: trendsResult.rows.map((row)=>({\n                    date: row.date,\n                    valid: parseInt(row.valid),\n                    invalid: parseInt(row.invalid),\n                    warning: parseInt(row.warning)\n                }))\n        };\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(response);\n    } catch (error) {\n        console.error(\"Error fetching claims summary:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch claims summary\",\n            details:  true ? error : 0\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9maWxlcy9bZmlsZUlkXS9jbGFpbXMvc3VtbWFyeS9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwyREFBMkQ7QUFDSDtBQUN2QjtBQUUxQixlQUFlRSxJQUNwQkMsT0FBb0IsRUFDcEIsRUFBRUMsTUFBTSxFQUFrQztJQUUxQyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Q7UUFFbkIsdUJBQXVCO1FBQ3ZCLE1BQU1FLGFBQWEsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0lBZXBCLENBQUM7UUFFRCxrQ0FBa0M7UUFDbEMsTUFBTUMsY0FBYyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFrQnJCLENBQUM7UUFFRCx3QkFBd0I7UUFDeEIsTUFBTUMsd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQi9CLENBQUM7UUFFRCxrQ0FBa0M7UUFDbEMsTUFBTSxDQUFDQyxhQUFhQyxjQUFjQyxlQUFlLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1lBQ3BFWiw4Q0FBS0EsQ0FBQ0ssWUFBWTtnQkFBQ0Q7YUFBTztZQUMxQkosOENBQUtBLENBQUNNLGFBQWE7Z0JBQUNGO2FBQU87WUFDM0JKLDhDQUFLQSxDQUFDTyx1QkFBdUI7Z0JBQUNIO2FBQU87U0FDdEM7UUFFRCxNQUFNUyxRQUFRTCxZQUFZTSxJQUFJLENBQUMsRUFBRTtRQUNqQyxNQUFNQyxtQkFBbUJMLGVBQWVJLElBQUksQ0FBQyxFQUFFLENBQUNFLGlCQUFpQixJQUFJLEVBQUU7UUFFdkUsa0JBQWtCO1FBQ2xCLE1BQU1DLFdBQVc7WUFDZkMsYUFBYUMsU0FBU04sTUFBTU8sWUFBWTtZQUN4Q0MsYUFBYUYsU0FBU04sTUFBTVMsWUFBWTtZQUN4Q0MsZUFBZUosU0FBU04sTUFBTVcsY0FBYztZQUM1Q0MsZUFBZU4sU0FBU04sTUFBTWEsY0FBYztZQUM1Q0MsaUJBQWlCZCxNQUFNZSxnQkFBZ0I7WUFDdkNDLGFBQWE7Z0JBQ1hDLFdBQVdDLFdBQVdsQixNQUFNbUIsVUFBVTtnQkFDdENDLGFBQWFGLFdBQVdsQixNQUFNcUIsWUFBWTtnQkFDMUNuQjtZQUNGO1lBQ0FvQixrQkFBa0IxQixhQUFhSyxJQUFJLENBQUNzQixHQUFHLENBQUNDLENBQUFBLE1BQVE7b0JBQzlDQyxNQUFNRCxJQUFJQyxJQUFJO29CQUNkQyxPQUFPcEIsU0FBU2tCLElBQUlFLEtBQUs7b0JBQ3pCQyxTQUFTckIsU0FBU2tCLElBQUlHLE9BQU87b0JBQzdCQyxTQUFTdEIsU0FBU2tCLElBQUlJLE9BQU87Z0JBQy9CO1FBQ0Y7UUFFQSxPQUFPMUMsa0ZBQVlBLENBQUMyQyxJQUFJLENBQUN6QjtJQUUzQixFQUFFLE9BQU8wQixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ2hELE9BQU81QyxrRkFBWUEsQ0FBQzJDLElBQUksQ0FDdEI7WUFDRUMsT0FBTztZQUNQRSxTQUFTQyxLQUF5QixHQUFnQkgsUUFBUUksQ0FBU0E7UUFDckUsR0FDQTtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3BoYXJtYWN5LWJlbmVmaXRzLXBsYXRmb3JtLy4vc3JjL2FwcC9hcGkvZmlsZXMvW2ZpbGVJZF0vY2xhaW1zL3N1bW1hcnkvcm91dGUudHM/MzczMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlOiBzcmMvYXBwL2FwaS9maWxlcy9bZmlsZUlkXS9jbGFpbXMvc3VtbWFyeS9yb3V0ZS50c1xuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IHF1ZXJ5IH0gZnJvbSAnQC9saWIvZGInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKFxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcbiAgeyBwYXJhbXMgfTogeyBwYXJhbXM6IHsgZmlsZUlkOiBzdHJpbmcgfSB9XG4pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGZpbGVJZCB9ID0gcGFyYW1zO1xuXG4gICAgLy8gR2V0IGJhc2ljIHN0YXRpc3RpY3NcbiAgICBjb25zdCBzdGF0c1F1ZXJ5ID0gYFxuICAgICAgU0VMRUNUIFxuICAgICAgICBDT1VOVCgqKSBhcyB0b3RhbF9jbGFpbXMsXG4gICAgICAgIENPVU5UKCopIEZJTFRFUiAoV0hFUkUgdmFsaWRhdGlvbl9zdGF0dXMgPSAndmFsaWQnKSBhcyB2YWxpZF9jbGFpbXMsXG4gICAgICAgIENPVU5UKCopIEZJTFRFUiAoV0hFUkUgdmFsaWRhdGlvbl9zdGF0dXMgPSAnaW52YWxpZCcpIGFzIGludmFsaWRfY2xhaW1zLFxuICAgICAgICBDT1VOVCgqKSBGSUxURVIgKFdIRVJFIHZhbGlkYXRpb25fc3RhdHVzID0gJ3dhcm5pbmcnKSBhcyB3YXJuaW5nX2NsYWltcyxcbiAgICAgICAganNvbmJfYnVpbGRfb2JqZWN0KFxuICAgICAgICAgICdwcm9jZXNzZWQnLCBDT1VOVCgqKSBGSUxURVIgKFdIRVJFIHByb2Nlc3Npbmdfc3RhdHVzID0gJ3Byb2Nlc3NlZCcpLFxuICAgICAgICAgICdwZW5kaW5nJywgQ09VTlQoKikgRklMVEVSIChXSEVSRSBwcm9jZXNzaW5nX3N0YXR1cyA9ICdwZW5kaW5nJyksXG4gICAgICAgICAgJ2ZhaWxlZCcsIENPVU5UKCopIEZJTFRFUiAoV0hFUkUgcHJvY2Vzc2luZ19zdGF0dXMgPSAnZmFpbGVkJylcbiAgICAgICAgKSBhcyBwcm9jZXNzaW5nX3N0YXRzLFxuICAgICAgICBDT0FMRVNDRShTVU0oKG1hcHBlZF9maWVsZHMtPj4nY29zdCcpOjpudW1lcmljKSwgMCkgYXMgdG90YWxfY29zdCxcbiAgICAgICAgQ09BTEVTQ0UoQVZHKChtYXBwZWRfZmllbGRzLT4+J2Nvc3QnKTo6bnVtZXJpYyksIDApIGFzIGF2ZXJhZ2VfY29zdFxuICAgICAgRlJPTSBjbGFpbV9yZWNvcmRzXG4gICAgICBXSEVSRSBmaWxlX2lkID0gJDFcbiAgICBgO1xuXG4gICAgLy8gR2V0IHZhbGlkYXRpb24gdHJlbmRzIG92ZXIgdGltZVxuICAgIGNvbnN0IHRyZW5kc1F1ZXJ5ID0gYFxuICAgICAgV0lUSCBkYWlseV9zdGF0cyBBUyAoXG4gICAgICAgIFNFTEVDVCBcbiAgICAgICAgICBEQVRFX1RSVU5DKCdkYXknLCBjcmVhdGVkX2F0KSBhcyBkYXRlLFxuICAgICAgICAgIENPVU5UKCopIEZJTFRFUiAoV0hFUkUgdmFsaWRhdGlvbl9zdGF0dXMgPSAndmFsaWQnKSBhcyB2YWxpZCxcbiAgICAgICAgICBDT1VOVCgqKSBGSUxURVIgKFdIRVJFIHZhbGlkYXRpb25fc3RhdHVzID0gJ2ludmFsaWQnKSBhcyBpbnZhbGlkLFxuICAgICAgICAgIENPVU5UKCopIEZJTFRFUiAoV0hFUkUgdmFsaWRhdGlvbl9zdGF0dXMgPSAnd2FybmluZycpIGFzIHdhcm5pbmdcbiAgICAgICAgRlJPTSBjbGFpbV9yZWNvcmRzXG4gICAgICAgIFdIRVJFIGZpbGVfaWQgPSAkMVxuICAgICAgICBHUk9VUCBCWSBEQVRFX1RSVU5DKCdkYXknLCBjcmVhdGVkX2F0KVxuICAgICAgICBPUkRFUiBCWSBkYXRlIEFTQ1xuICAgICAgKVxuICAgICAgU0VMRUNUIFxuICAgICAgICBUT19DSEFSKGRhdGUsICdZWVlZLU1NLUREJykgYXMgZGF0ZSxcbiAgICAgICAgdmFsaWQsXG4gICAgICAgIGludmFsaWQsXG4gICAgICAgIHdhcm5pbmdcbiAgICAgIEZST00gZGFpbHlfc3RhdHNcbiAgICBgO1xuXG4gICAgLy8gR2V0IGNvc3QgZGlzdHJpYnV0aW9uXG4gICAgY29uc3QgY29zdERpc3RyaWJ1dGlvblF1ZXJ5ID0gYFxuICAgICAgV0lUSCByYW5nZXMgQVMgKFxuICAgICAgICBTRUxFQ1RcbiAgICAgICAgICBDQVNFXG4gICAgICAgICAgICBXSEVOIChtYXBwZWRfZmllbGRzLT4+J2Nvc3QnKTo6bnVtZXJpYyA8IDEwMCBUSEVOICcwLTEwMCdcbiAgICAgICAgICAgIFdIRU4gKG1hcHBlZF9maWVsZHMtPj4nY29zdCcpOjpudW1lcmljIDwgNTAwIFRIRU4gJzEwMC01MDAnXG4gICAgICAgICAgICBXSEVOIChtYXBwZWRfZmllbGRzLT4+J2Nvc3QnKTo6bnVtZXJpYyA8IDEwMDAgVEhFTiAnNTAwLTEwMDAnXG4gICAgICAgICAgICBFTFNFICcxMDAwKydcbiAgICAgICAgICBFTkQgYXMgcmFuZ2UsXG4gICAgICAgICAgQ09VTlQoKikgYXMgY291bnRcbiAgICAgICAgRlJPTSBjbGFpbV9yZWNvcmRzXG4gICAgICAgIFdIRVJFIGZpbGVfaWQgPSAkMSBBTkQgbWFwcGVkX2ZpZWxkcy0+Pidjb3N0JyBJUyBOT1QgTlVMTFxuICAgICAgICBHUk9VUCBCWSByYW5nZVxuICAgICAgKVxuICAgICAgU0VMRUNUIGpzb25iX2FnZyhqc29uYl9idWlsZF9vYmplY3QoXG4gICAgICAgICdyYW5nZScsIHJhbmdlLFxuICAgICAgICAnY291bnQnLCBjb3VudFxuICAgICAgKSkgYXMgY29zdF9kaXN0cmlidXRpb25cbiAgICAgIEZST00gcmFuZ2VzXG4gICAgYDtcblxuICAgIC8vIEV4ZWN1dGUgYWxsIHF1ZXJpZXMgaW4gcGFyYWxsZWxcbiAgICBjb25zdCBbc3RhdHNSZXN1bHQsIHRyZW5kc1Jlc3VsdCwgY29zdERpc3RSZXN1bHRdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgcXVlcnkoc3RhdHNRdWVyeSwgW2ZpbGVJZF0pLFxuICAgICAgcXVlcnkodHJlbmRzUXVlcnksIFtmaWxlSWRdKSxcbiAgICAgIHF1ZXJ5KGNvc3REaXN0cmlidXRpb25RdWVyeSwgW2ZpbGVJZF0pXG4gICAgXSk7XG5cbiAgICBjb25zdCBzdGF0cyA9IHN0YXRzUmVzdWx0LnJvd3NbMF07XG4gICAgY29uc3QgY29zdERpc3RyaWJ1dGlvbiA9IGNvc3REaXN0UmVzdWx0LnJvd3NbMF0uY29zdF9kaXN0cmlidXRpb24gfHwgW107XG5cbiAgICAvLyBGb3JtYXQgcmVzcG9uc2VcbiAgICBjb25zdCByZXNwb25zZSA9IHtcbiAgICAgIHRvdGFsQ2xhaW1zOiBwYXJzZUludChzdGF0cy50b3RhbF9jbGFpbXMpLFxuICAgICAgdmFsaWRDbGFpbXM6IHBhcnNlSW50KHN0YXRzLnZhbGlkX2NsYWltcyksXG4gICAgICBpbnZhbGlkQ2xhaW1zOiBwYXJzZUludChzdGF0cy5pbnZhbGlkX2NsYWltcyksXG4gICAgICB3YXJuaW5nQ2xhaW1zOiBwYXJzZUludChzdGF0cy53YXJuaW5nX2NsYWltcyksXG4gICAgICBwcm9jZXNzaW5nU3RhdHM6IHN0YXRzLnByb2Nlc3Npbmdfc3RhdHMsXG4gICAgICBjb3N0U3VtbWFyeToge1xuICAgICAgICB0b3RhbENvc3Q6IHBhcnNlRmxvYXQoc3RhdHMudG90YWxfY29zdCksXG4gICAgICAgIGF2ZXJhZ2VDb3N0OiBwYXJzZUZsb2F0KHN0YXRzLmF2ZXJhZ2VfY29zdCksXG4gICAgICAgIGNvc3REaXN0cmlidXRpb25cbiAgICAgIH0sXG4gICAgICB2YWxpZGF0aW9uVHJlbmRzOiB0cmVuZHNSZXN1bHQucm93cy5tYXAocm93ID0+ICh7XG4gICAgICAgIGRhdGU6IHJvdy5kYXRlLFxuICAgICAgICB2YWxpZDogcGFyc2VJbnQocm93LnZhbGlkKSxcbiAgICAgICAgaW52YWxpZDogcGFyc2VJbnQocm93LmludmFsaWQpLFxuICAgICAgICB3YXJuaW5nOiBwYXJzZUludChyb3cud2FybmluZylcbiAgICAgIH0pKVxuICAgIH07XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVzcG9uc2UpO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgY2xhaW1zIHN1bW1hcnk6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgXG4gICAgICAgIGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIGNsYWltcyBzdW1tYXJ5JyxcbiAgICAgICAgZGV0YWlsczogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBlcnJvciA6IHVuZGVmaW5lZFxuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwicXVlcnkiLCJHRVQiLCJyZXF1ZXN0IiwicGFyYW1zIiwiZmlsZUlkIiwic3RhdHNRdWVyeSIsInRyZW5kc1F1ZXJ5IiwiY29zdERpc3RyaWJ1dGlvblF1ZXJ5Iiwic3RhdHNSZXN1bHQiLCJ0cmVuZHNSZXN1bHQiLCJjb3N0RGlzdFJlc3VsdCIsIlByb21pc2UiLCJhbGwiLCJzdGF0cyIsInJvd3MiLCJjb3N0RGlzdHJpYnV0aW9uIiwiY29zdF9kaXN0cmlidXRpb24iLCJyZXNwb25zZSIsInRvdGFsQ2xhaW1zIiwicGFyc2VJbnQiLCJ0b3RhbF9jbGFpbXMiLCJ2YWxpZENsYWltcyIsInZhbGlkX2NsYWltcyIsImludmFsaWRDbGFpbXMiLCJpbnZhbGlkX2NsYWltcyIsIndhcm5pbmdDbGFpbXMiLCJ3YXJuaW5nX2NsYWltcyIsInByb2Nlc3NpbmdTdGF0cyIsInByb2Nlc3Npbmdfc3RhdHMiLCJjb3N0U3VtbWFyeSIsInRvdGFsQ29zdCIsInBhcnNlRmxvYXQiLCJ0b3RhbF9jb3N0IiwiYXZlcmFnZUNvc3QiLCJhdmVyYWdlX2Nvc3QiLCJ2YWxpZGF0aW9uVHJlbmRzIiwibWFwIiwicm93IiwiZGF0ZSIsInZhbGlkIiwiaW52YWxpZCIsIndhcm5pbmciLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiZGV0YWlscyIsInByb2Nlc3MiLCJ1bmRlZmluZWQiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/files/[fileId]/claims/summary/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db/index.ts":
/*!*****************************!*\
  !*** ./src/lib/db/index.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkConnection: () => (/* binding */ checkConnection),\n/* harmony export */   healthCheck: () => (/* binding */ healthCheck),\n/* harmony export */   pool: () => (/* binding */ pool),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_0__);\n// File: src/lib/db/index.ts\n\n// Validate required environment variables\nconst requiredEnvVars = [\n    \"DB_USER\",\n    \"DB_PASSWORD\",\n    \"DB_HOST\",\n    \"DB_PORT\",\n    \"DB_NAME\",\n    \"DB_SCHEMA\"\n];\nrequiredEnvVars.forEach((envVar)=>{\n    if (!process.env[envVar]) {\n        console.error(`Missing required environment variable: ${envVar}`);\n    }\n});\nconst config = {\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    host: process.env.DB_HOST,\n    port: parseInt(process.env.DB_PORT || \"5432\"),\n    database: process.env.DB_NAME,\n    // Add schema to search path if specified\n    ...process.env.DB_SCHEMA && {\n        options: `-c search_path=${process.env.DB_SCHEMA}`\n    },\n    // Connection pool settings\n    max: 20,\n    idleTimeoutMillis: 30000,\n    connectionTimeoutMillis: 2000,\n    ssl: {\n        rejectUnauthorized: false // Required for AWS RDS connections\n    }\n};\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(config);\n// Connection event handlers\npool.on(\"connect\", ()=>{\n    console.log(\"Connected to PostgreSQL database\");\n});\npool.on(\"error\", (err)=>{\n    console.error(\"Unexpected error on idle database client\", err);\n    process.exit(-1);\n});\n// Add connection testing function\nasync function checkConnection() {\n    let client;\n    try {\n        client = await pool.connect();\n        // Set schema for this connection\n        if (process.env.DB_SCHEMA) {\n            await client.query(`SET search_path TO ${process.env.DB_SCHEMA}`);\n        }\n        await client.query(\"SELECT NOW()\");\n        return true;\n    } catch (error) {\n        console.error(\"Database connection test failed:\", error);\n        return false;\n    } finally{\n        if (client) client.release();\n    }\n}\n// Improved query function with better error handling and schema setting\nasync function query(text, params) {\n    const client = await pool.connect();\n    try {\n        // Set schema for this connection\n        if (process.env.DB_SCHEMA) {\n            await client.query(`SET search_path TO ${process.env.DB_SCHEMA}`);\n        }\n        const start = Date.now();\n        const result = await client.query(text, params);\n        const duration = Date.now() - start;\n        // Log slow queries\n        if (duration > 1000) {\n            console.warn(\"Slow query:\", {\n                text,\n                duration,\n                rows: result.rowCount\n            });\n        }\n        return result;\n    } catch (error) {\n        if (error instanceof Error) {\n            console.error(\"Database query error:\", {\n                error: error.message,\n                query: text,\n                params\n            });\n        }\n        throw error;\n    } finally{\n        client.release();\n    }\n}\n// Health check function with more detailed diagnostics\nasync function healthCheck() {\n    try {\n        const result = await query(\"SELECT version(), current_database(), current_schema();\");\n        return {\n            isHealthy: true,\n            details: `Connected to ${result.rows[0].current_database} using schema ${result.rows[0].current_schema}`,\n            config: {\n                host: process.env.DB_HOST,\n                port: process.env.DB_PORT,\n                database: process.env.DB_NAME,\n                schema: process.env.DB_SCHEMA,\n                user: process.env.DB_USER\n            }\n        };\n    } catch (error) {\n        return {\n            isHealthy: false,\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db/index.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fclaims%2Fsummary%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();