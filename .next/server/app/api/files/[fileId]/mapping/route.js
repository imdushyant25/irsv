"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/files/[fileId]/mapping/route";
exports.ids = ["app/api/files/[fileId]/mapping/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_dushyantsingh_Documents_illuminate_rx_copy_src_app_api_files_fileId_mapping_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/files/[fileId]/mapping/route.ts */ \"(rsc)/./src/app/api/files/[fileId]/mapping/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/files/[fileId]/mapping/route\",\n        pathname: \"/api/files/[fileId]/mapping\",\n        filename: \"route\",\n        bundlePath: \"app/api/files/[fileId]/mapping/route\"\n    },\n    resolvedPagePath: \"/Users/dushyantsingh/Documents/illuminate-rx copy/src/app/api/files/[fileId]/mapping/route.ts\",\n    nextConfigOutput,\n    userland: _Users_dushyantsingh_Documents_illuminate_rx_copy_src_app_api_files_fileId_mapping_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/files/[fileId]/mapping/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZmaWxlcyUyRiU1QmZpbGVJZCU1RCUyRm1hcHBpbmclMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmZpbGVzJTJGJTVCZmlsZUlkJTVEJTJGbWFwcGluZyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmZpbGVzJTJGJTVCZmlsZUlkJTVEJTJGbWFwcGluZyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmR1c2h5YW50c2luZ2glMkZEb2N1bWVudHMlMkZpbGx1bWluYXRlLXJ4JTIwY29weSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZkdXNoeWFudHNpbmdoJTJGRG9jdW1lbnRzJTJGaWxsdW1pbmF0ZS1yeCUyMGNvcHkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNkM7QUFDMUg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9waGFybWFjeS1iZW5lZml0cy1wbGF0Zm9ybS8/OWUxOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvZHVzaHlhbnRzaW5naC9Eb2N1bWVudHMvaWxsdW1pbmF0ZS1yeCBjb3B5L3NyYy9hcHAvYXBpL2ZpbGVzL1tmaWxlSWRdL21hcHBpbmcvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2ZpbGVzL1tmaWxlSWRdL21hcHBpbmcvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9maWxlcy9bZmlsZUlkXS9tYXBwaW5nXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9maWxlcy9bZmlsZUlkXS9tYXBwaW5nL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2R1c2h5YW50c2luZ2gvRG9jdW1lbnRzL2lsbHVtaW5hdGUtcnggY29weS9zcmMvYXBwL2FwaS9maWxlcy9bZmlsZUlkXS9tYXBwaW5nL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2ZpbGVzL1tmaWxlSWRdL21hcHBpbmcvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/files/[fileId]/mapping/route.ts":
/*!*****************************************************!*\
  !*** ./src/app/api/files/[fileId]/mapping/route.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db/index.ts\");\n/* harmony import */ var _types_file__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/types/file */ \"(rsc)/./src/types/file.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n// File: src/app/api/files/[fileId]/mapping/route.ts\n\n\n\n\n\n// Validation schema for mapping request\nconst mappingSchema = zod__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    mapping: zod__WEBPACK_IMPORTED_MODULE_3__.z.record(zod__WEBPACK_IMPORTED_MODULE_3__.z.string(), zod__WEBPACK_IMPORTED_MODULE_3__.z.string())\n});\nasync function GET(request, { params }) {\n    try {\n        const { fileId } = params;\n        if (!fileId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"File ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Get the most recent active template for this file\n        const templateQuery = `\n      SELECT \n        tm.id as \"templateId\",\n        tm.template_name as \"templateName\",\n        tm.file_id as \"fileId\",\n        f.status,\n        f.processing_stage as \"processingStage\"\n      FROM template_mappings tm\n      JOIN claims_file_registry f ON f.file_id = tm.file_id\n      WHERE tm.file_id = $1 AND tm.is_active = true\n      ORDER BY tm.created_at DESC\n      LIMIT 1\n    `;\n        const templateResult = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(templateQuery, [\n            fileId\n        ]);\n        if (templateResult.rows.length === 0) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                mappings: []\n            });\n        }\n        const template = templateResult.rows[0];\n        // Get all mappings for this template\n        const mappingsQuery = `\n      SELECT \n        mt.source_column as \"sourceColumn\",\n        mt.standard_field_id as \"standardFieldId\",\n        mt.transformation_rule as \"transformationRule\",\n        scf.field_name as \"fieldName\",\n        scf.display_name as \"displayName\",\n        scf.data_type as \"dataType\",\n        scf.requirement_level as \"requirementLevel\"\n      FROM mapping_templates mt\n      JOIN standard_claim_fields scf ON scf.id = mt.standard_field_id\n      WHERE mt.template_id = $1\n    `;\n        const mappingsResult = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(mappingsQuery, [\n            template.templateId\n        ]);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            fileStatus: template.status,\n            processingStage: template.processingStage,\n            templateName: template.templateName,\n            mappings: mappingsResult.rows\n        });\n    } catch (error) {\n        console.error(\"Error fetching mappings:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to fetch mappings\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request, { params }) {\n    try {\n        const { fileId } = params;\n        if (!fileId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"File ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate request body\n        const body = await request.json();\n        const validationResult = mappingSchema.safeParse(body);\n        if (!validationResult.success) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid request body\",\n                details: validationResult.error\n            }, {\n                status: 400\n            });\n        }\n        const { mapping } = validationResult.data;\n        // Start transaction\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(\"BEGIN\");\n        try {\n            // First check if a template already exists for this file\n            const existingTemplateQuery = `\n        SELECT id, template_name \n        FROM template_mappings \n        WHERE file_id = $1 AND is_active = true\n        ORDER BY created_at DESC\n        LIMIT 1\n      `;\n            const existingTemplate = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(existingTemplateQuery, [\n                fileId\n            ]);\n            let templateId;\n            let templateName;\n            if (existingTemplate.rows.length > 0) {\n                // Use existing template\n                templateId = existingTemplate.rows[0].id;\n                templateName = existingTemplate.rows[0].template_name;\n                // Delete existing mappings for this template\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(\"DELETE FROM mapping_templates WHERE template_id = $1\", [\n                    templateId\n                ]);\n            } else {\n                // Create new template only if one doesn't exist\n                const { opportunity_id, product_id, original_filename } = (await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(\"SELECT opportunity_id, product_id, original_filename FROM claims_file_registry WHERE file_id = $1\", [\n                    fileId\n                ])).rows[0];\n                const timestamp = new Date().toISOString().replace(/[:.]/g, \"-\");\n                templateName = `${product_id}_${original_filename.split(\".\")[0]}_${timestamp}`;\n                templateId = (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(`\n          INSERT INTO template_mappings (\n            id, template_name, file_id, opportunity_id, product_id, is_active, created_by\n          ) VALUES ($1, $2, $3, $4, $5, true, $6)\n        `, [\n                    templateId,\n                    templateName,\n                    fileId,\n                    opportunity_id,\n                    product_id,\n                    \"system\"\n                ]);\n            }\n            // Insert new mappings\n            const mappingValues = Object.entries(mapping).map(([sourceColumn, standardFieldId])=>[\n                    (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n                    templateId,\n                    sourceColumn,\n                    standardFieldId,\n                    null,\n                    \"system\" // created_by\n                ]);\n            if (mappingValues.length > 0) {\n                const mappingPlaceholders = mappingValues.map((_, i)=>`($${i * 6 + 1}, $${i * 6 + 2}, $${i * 6 + 3}, $${i * 6 + 4}, $${i * 6 + 5}, $${i * 6 + 6})`).join(\", \");\n                await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(`\n          INSERT INTO mapping_templates (\n            id, template_id, source_column, standard_field_id, transformation_rule, created_by\n          ) VALUES ${mappingPlaceholders}\n        `, mappingValues.flat());\n            }\n            // Update file status\n            const updateFileQuery = `\n        UPDATE claims_file_registry \n        SET \n          status = $1,\n          processing_stage = $2,\n          updated_at = CURRENT_TIMESTAMP,\n          updated_by = $3\n        WHERE file_id = $4\n        RETURNING \n          file_id as \"fileId\",\n          status,\n          processing_stage as \"processingStage\"\n      `;\n            const updatedFile = await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(updateFileQuery, [\n                _types_file__WEBPACK_IMPORTED_MODULE_2__.FileStatus.MAPPED,\n                _types_file__WEBPACK_IMPORTED_MODULE_2__.ProcessingStage.MAPPING_COMPLETE,\n                \"system\",\n                fileId\n            ]);\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(\"COMMIT\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                message: \"Mapping saved successfully\",\n                file: updatedFile.rows[0],\n                templateId,\n                templateName\n            });\n        } catch (error) {\n            await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__.query)(\"ROLLBACK\");\n            throw error;\n        }\n    } catch (error) {\n        console.error(\"Error saving mapping:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to save mapping\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/files/[fileId]/mapping/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db/index.ts":
/*!*****************************!*\
  !*** ./src/lib/db/index.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkConnection: () => (/* binding */ checkConnection),\n/* harmony export */   healthCheck: () => (/* binding */ healthCheck),\n/* harmony export */   pool: () => (/* binding */ pool),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_0__);\n// File: src/lib/db/index.ts\n\n// Validate required environment variables\nconst requiredEnvVars = [\n    \"DB_USER\",\n    \"DB_PASSWORD\",\n    \"DB_HOST\",\n    \"DB_PORT\",\n    \"DB_NAME\",\n    \"DB_SCHEMA\"\n];\nrequiredEnvVars.forEach((envVar)=>{\n    if (!process.env[envVar]) {\n        console.error(`Missing required environment variable: ${envVar}`);\n    }\n});\nconst config = {\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    host: process.env.DB_HOST,\n    port: parseInt(process.env.DB_PORT || \"5432\"),\n    database: process.env.DB_NAME,\n    // Add schema to search path if specified\n    ...process.env.DB_SCHEMA && {\n        options: `-c search_path=${process.env.DB_SCHEMA}`\n    },\n    // Connection pool settings\n    max: 20,\n    idleTimeoutMillis: 30000,\n    connectionTimeoutMillis: 2000,\n    ssl: {\n        rejectUnauthorized: false // Required for AWS RDS connections\n    }\n};\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool(config);\n// Connection event handlers\npool.on(\"connect\", ()=>{\n    console.log(\"Connected to PostgreSQL database\");\n});\npool.on(\"error\", (err)=>{\n    console.error(\"Unexpected error on idle database client\", err);\n    process.exit(-1);\n});\n// Add connection testing function\nasync function checkConnection() {\n    let client;\n    try {\n        client = await pool.connect();\n        // Set schema for this connection\n        if (process.env.DB_SCHEMA) {\n            await client.query(`SET search_path TO ${process.env.DB_SCHEMA}`);\n        }\n        await client.query(\"SELECT NOW()\");\n        return true;\n    } catch (error) {\n        console.error(\"Database connection test failed:\", error);\n        return false;\n    } finally{\n        if (client) client.release();\n    }\n}\n// Improved query function with better error handling and schema setting\nasync function query(text, params) {\n    const client = await pool.connect();\n    try {\n        // Set schema for this connection\n        if (process.env.DB_SCHEMA) {\n            await client.query(`SET search_path TO ${process.env.DB_SCHEMA}`);\n        }\n        const start = Date.now();\n        const result = await client.query(text, params);\n        const duration = Date.now() - start;\n        // Log slow queries\n        if (duration > 1000) {\n            console.warn(\"Slow query:\", {\n                text,\n                duration,\n                rows: result.rowCount\n            });\n        }\n        return result;\n    } catch (error) {\n        if (error instanceof Error) {\n            console.error(\"Database query error:\", {\n                error: error.message,\n                query: text,\n                params\n            });\n        }\n        throw error;\n    } finally{\n        client.release();\n    }\n}\n// Health check function with more detailed diagnostics\nasync function healthCheck() {\n    try {\n        const result = await query(\"SELECT version(), current_database(), current_schema();\");\n        return {\n            isHealthy: true,\n            details: `Connected to ${result.rows[0].current_database} using schema ${result.rows[0].current_schema}`,\n            config: {\n                host: process.env.DB_HOST,\n                port: process.env.DB_PORT,\n                database: process.env.DB_NAME,\n                schema: process.env.DB_SCHEMA,\n                user: process.env.DB_USER\n            }\n        };\n    } catch (error) {\n        return {\n            isHealthy: false,\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db/index.ts\n");

/***/ }),

/***/ "(rsc)/./src/types/file.ts":
/*!***************************!*\
  !*** ./src/types/file.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileStatus: () => (/* binding */ FileStatus),\n/* harmony export */   ProcessingStage: () => (/* binding */ ProcessingStage),\n/* harmony export */   canProcessFile: () => (/* binding */ canProcessFile),\n/* harmony export */   getFileStatusDisplay: () => (/* binding */ getFileStatusDisplay),\n/* harmony export */   getProcessingStageDisplay: () => (/* binding */ getProcessingStageDisplay),\n/* harmony export */   isFileAvailableForMapping: () => (/* binding */ isFileAvailableForMapping),\n/* harmony export */   isFileProcessingComplete: () => (/* binding */ isFileProcessingComplete),\n/* harmony export */   isValidStageTransition: () => (/* binding */ isValidStageTransition),\n/* harmony export */   isValidStatusTransition: () => (/* binding */ isValidStatusTransition),\n/* harmony export */   validStageTransitions: () => (/* binding */ validStageTransitions),\n/* harmony export */   validStatusTransitions: () => (/* binding */ validStatusTransitions)\n/* harmony export */ });\n// File: src/types/file.ts\n/**\n * Represents a file record in the system\n */ var FileStatus;\n(function(FileStatus) {\n    FileStatus[\"PENDING\"] = \"PENDING\";\n    FileStatus[\"PROCESSING\"] = \"PROCESSING\";\n    FileStatus[\"MAPPED\"] = \"MAPPED\";\n    FileStatus[\"ERROR\"] = \"ERROR\";\n    FileStatus[\"PROCESSING_CLAIMS\"] = \"PROCESSING_CLAIMS\";\n    FileStatus[\"PROCESSED\"] = \"PROCESSED\";\n    FileStatus[\"ENRICHED\"] = \"ENRICHED\"; // File has been enriched with additional data\n})(FileStatus || (FileStatus = {}));\nvar ProcessingStage;\n(function(ProcessingStage) {\n    ProcessingStage[\"READY_FOR_MAPPING\"] = \"READY_FOR_MAPPING\";\n    ProcessingStage[\"MAPPING_IN_PROGRESS\"] = \"MAPPING_IN_PROGRESS\";\n    ProcessingStage[\"MAPPING_COMPLETE\"] = \"MAPPING_COMPLETE\";\n    ProcessingStage[\"CLAIMS_PROCESSING\"] = \"CLAIMS_PROCESSING\";\n    ProcessingStage[\"CLAIMS_PROCESSED\"] = \"CLAIMS_PROCESSED\";\n    ProcessingStage[\"PROCESSED\"] = \"PROCESSED\"; // File is fully processed\n})(ProcessingStage || (ProcessingStage = {}));\n/**\n * Defines valid transitions between processing stages\n */ const validStageTransitions = {\n    [\"READY_FOR_MAPPING\"]: [\n        \"MAPPING_IN_PROGRESS\"\n    ],\n    [\"MAPPING_IN_PROGRESS\"]: [\n        \"MAPPING_COMPLETE\",\n        \"READY_FOR_MAPPING\"\n    ],\n    [\"MAPPING_COMPLETE\"]: [\n        \"CLAIMS_PROCESSING\",\n        \"MAPPING_IN_PROGRESS\"\n    ],\n    [\"CLAIMS_PROCESSING\"]: [\n        \"CLAIMS_PROCESSED\",\n        \"MAPPING_COMPLETE\"\n    ],\n    [\"CLAIMS_PROCESSED\"]: [\n        \"PROCESSED\"\n    ],\n    [\"PROCESSED\"]: [] // No further transitions allowed\n};\n/**\n * Defines valid transitions between file statuses\n */ const validStatusTransitions = {\n    [\"PENDING\"]: [\n        \"PROCESSING\"\n    ],\n    [\"PROCESSING\"]: [\n        \"MAPPED\",\n        \"ERROR\"\n    ],\n    [\"MAPPED\"]: [\n        \"PROCESSING_CLAIMS\",\n        \"ERROR\"\n    ],\n    [\"PROCESSING_CLAIMS\"]: [\n        \"PROCESSED\",\n        \"ERROR\"\n    ],\n    [\"PROCESSED\"]: [\n        \"ENRICHED\",\n        \"ERROR\"\n    ],\n    [\"ENRICHED\"]: [\n        \"PROCESSED\",\n        \"ERROR\"\n    ],\n    [\"ERROR\"]: [\n        \"PROCESSING\",\n        \"PROCESSING_CLAIMS\",\n        \"PROCESSED\"\n    ]\n};\n/**\n * Type guard to check if a stage transition is valid\n */ function isValidStageTransition(currentStage, newStage) {\n    return validStageTransitions[currentStage]?.includes(newStage) ?? false;\n}\n/**\n * Type guard to check if a status transition is valid\n */ function isValidStatusTransition(currentStatus, newStatus) {\n    return validStatusTransitions[currentStatus]?.includes(newStatus) ?? false;\n}\n/**\n * Helper function to determine if a file should be shown in mapping tab\n */ function isFileAvailableForMapping(file) {\n    const validCombinations = [\n        {\n            status: \"PENDING\",\n            stage: \"READY_FOR_MAPPING\"\n        },\n        {\n            status: \"PROCESSING\",\n            stage: \"MAPPING_IN_PROGRESS\"\n        },\n        {\n            status: \"MAPPED\",\n            stage: \"MAPPING_COMPLETE\"\n        },\n        {\n            status: \"ERROR\",\n            stage: \"MAPPING_IN_PROGRESS\"\n        }\n    ];\n    return validCombinations.some((combo)=>combo.status === file.status && combo.stage === file.processingStage);\n}\n/**\n * Helper function to determine if a file is in a final state\n */ function isFileProcessingComplete(file) {\n    return file.status === \"PROCESSED\" && file.processingStage === \"PROCESSED\";\n}\n/**\n * Helper function to determine if a file can be processed\n */ function canProcessFile(file) {\n    return file.status === \"MAPPED\" && file.processingStage === \"MAPPING_COMPLETE\";\n}\n/**\n * Helper function to get display text for file status\n */ function getFileStatusDisplay(status) {\n    const displayMap = {\n        [\"PENDING\"]: \"Pending\",\n        [\"PROCESSING\"]: \"Processing\",\n        [\"MAPPED\"]: \"Mapped\",\n        [\"ERROR\"]: \"Error\",\n        [\"PROCESSING_CLAIMS\"]: \"Processing Claims\",\n        [\"PROCESSED\"]: \"Processed\",\n        [\"ENRICHED\"]: \"Enriched\"\n    };\n    return displayMap[status] || status;\n}\n/**\n * Helper function to get display text for processing stage\n */ function getProcessingStageDisplay(stage) {\n    const displayMap = {\n        [\"READY_FOR_MAPPING\"]: \"Ready for Mapping\",\n        [\"MAPPING_IN_PROGRESS\"]: \"Mapping in Progress\",\n        [\"MAPPING_COMPLETE\"]: \"Mapping Complete\",\n        [\"CLAIMS_PROCESSING\"]: \"Processing Claims\",\n        [\"CLAIMS_PROCESSED\"]: \"Claims Processed\",\n        [\"PROCESSED\"]: \"Processed\"\n    };\n    return displayMap[stage] || stage;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/types/file.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&page=%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffiles%2F%5BfileId%5D%2Fmapping%2Froute.ts&appDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdushyantsingh%2FDocuments%2Filluminate-rx%20copy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();