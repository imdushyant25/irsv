"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js";
exports.ids = ["vendor-chunks/@zag-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@zag-js/dom-query/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_Z_INDEX: () => (/* binding */ MAX_Z_INDEX),\n/* harmony export */   ariaAttr: () => (/* binding */ ariaAttr),\n/* harmony export */   contains: () => (/* binding */ contains),\n/* harmony export */   createScope: () => (/* binding */ createScope),\n/* harmony export */   dataAttr: () => (/* binding */ dataAttr),\n/* harmony export */   getActiveElement: () => (/* binding */ getActiveElement),\n/* harmony export */   getBeforeInputValue: () => (/* binding */ getBeforeInputValue),\n/* harmony export */   getByText: () => (/* binding */ getByText),\n/* harmony export */   getByTypeahead: () => (/* binding */ getByTypeahead),\n/* harmony export */   getComputedStyle: () => (/* binding */ getComputedStyle),\n/* harmony export */   getDocument: () => (/* binding */ getDocument2),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   getParent: () => (/* binding */ getParent),\n/* harmony export */   getPlatform: () => (/* binding */ getPlatform),\n/* harmony export */   getScrollParent: () => (/* binding */ getScrollParent),\n/* harmony export */   getScrollParents: () => (/* binding */ getScrollParents),\n/* harmony export */   getWindow: () => (/* binding */ getWindow),\n/* harmony export */   indexOfId: () => (/* binding */ indexOfId),\n/* harmony export */   isApple: () => (/* binding */ isApple),\n/* harmony export */   isDom: () => (/* binding */ isDom),\n/* harmony export */   isEditableElement: () => (/* binding */ isEditableElement),\n/* harmony export */   isFirefox: () => (/* binding */ isFirefox),\n/* harmony export */   isHTMLElement: () => (/* binding */ isHTMLElement),\n/* harmony export */   isIPhone: () => (/* binding */ isIPhone),\n/* harmony export */   isIos: () => (/* binding */ isIos),\n/* harmony export */   isMac: () => (/* binding */ isMac),\n/* harmony export */   isSafari: () => (/* binding */ isSafari),\n/* harmony export */   isSelfEvent: () => (/* binding */ isSelfEvent),\n/* harmony export */   isTouchDevice: () => (/* binding */ isTouchDevice),\n/* harmony export */   itemById: () => (/* binding */ itemById),\n/* harmony export */   nextById: () => (/* binding */ nextById),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   prevById: () => (/* binding */ prevById),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   queryAll: () => (/* binding */ queryAll),\n/* harmony export */   raf: () => (/* binding */ raf)\n/* harmony export */ });\n// src/attrs.ts\nvar dataAttr = (guard)=>{\n    return guard ? \"\" : void 0;\n};\nvar ariaAttr = (guard)=>{\n    return guard ? \"true\" : void 0;\n};\n// src/is-html-element.ts\nvar isHTMLElement = (v)=>typeof v === \"object\" && v?.nodeType === Node.ELEMENT_NODE && typeof v?.nodeName === \"string\";\n// src/contains.ts\nfunction contains(parent, child) {\n    if (!parent || !child) return false;\n    if (!isHTMLElement(parent) || !isHTMLElement(child)) return false;\n    return parent === child || parent.contains(child);\n}\nvar isSelfEvent = (event)=>contains(event.currentTarget, event.target);\n// src/create-scope.ts\nvar getDocument = (node)=>{\n    if (node.nodeType === Node.DOCUMENT_NODE) return node;\n    return node.ownerDocument ?? document;\n};\nfunction createScope(methods) {\n    const screen = {\n        getRootNode: (ctx)=>ctx.getRootNode?.() ?? document,\n        getDoc: (ctx)=>getDocument(screen.getRootNode(ctx)),\n        getWin: (ctx)=>screen.getDoc(ctx).defaultView ?? window,\n        getActiveElement: (ctx)=>screen.getDoc(ctx).activeElement,\n        isActiveElement: (ctx, elem)=>elem === screen.getActiveElement(ctx),\n        focus (ctx, elem) {\n            if (elem == null) return;\n            if (!screen.isActiveElement(ctx, elem)) elem.focus({\n                preventScroll: true\n            });\n        },\n        getById: (ctx, id)=>screen.getRootNode(ctx).getElementById(id),\n        setValue: (elem, value)=>{\n            if (elem == null || value == null) return;\n            const valueAsString = value.toString();\n            if (elem.value === valueAsString) return;\n            elem.value = value.toString();\n        }\n    };\n    return {\n        ...screen,\n        ...methods\n    };\n}\n// src/is-document.ts\nvar isDocument = (el)=>el.nodeType === Node.DOCUMENT_NODE;\n// src/is-shadow-root.ts\nvar isNode = (el)=>el.nodeType !== void 0;\nvar isShadowRoot = (el)=>el && isNode(el) && el.nodeType === Node.DOCUMENT_FRAGMENT_NODE && \"host\" in el;\n// src/env.ts\nfunction getDocument2(el) {\n    if (isDocument(el)) return el;\n    return el?.ownerDocument ?? document;\n}\nfunction getWindow(el) {\n    if (isShadowRoot(el)) return getWindow(el.host);\n    if (isDocument(el)) return el.defaultView ?? window;\n    if (isHTMLElement(el)) return el.ownerDocument?.defaultView ?? window;\n    return window;\n}\n// src/get-active-element.ts\nfunction getActiveElement(el) {\n    let activeElement = el.ownerDocument.activeElement;\n    while(activeElement?.shadowRoot){\n        const el2 = activeElement.shadowRoot.activeElement;\n        if (el2 === activeElement) break;\n        else activeElement = el2;\n    }\n    return activeElement;\n}\n// src/get-before-input-value.ts\nfunction getBeforeInputValue(event) {\n    const { selectionStart, selectionEnd, value } = event.currentTarget;\n    return value.slice(0, selectionStart) + event.data + value.slice(selectionEnd);\n}\n// src/get-by-id.ts\nfunction itemById(v, id) {\n    return v.find((node)=>node.id === id);\n}\nfunction indexOfId(v, id) {\n    const item = itemById(v, id);\n    return item ? v.indexOf(item) : -1;\n}\nfunction nextById(v, id, loop = true) {\n    let idx = indexOfId(v, id);\n    idx = loop ? (idx + 1) % v.length : Math.min(idx + 1, v.length - 1);\n    return v[idx];\n}\nfunction prevById(v, id, loop = true) {\n    let idx = indexOfId(v, id);\n    if (idx === -1) return loop ? v[v.length - 1] : null;\n    idx = loop ? (idx - 1 + v.length) % v.length : Math.max(0, idx - 1);\n    return v[idx];\n}\n// src/get-by-text.ts\nvar getValueText = (item)=>item.dataset.valuetext ?? item.textContent ?? \"\";\nvar match = (valueText, query2)=>valueText.trim().toLowerCase().startsWith(query2.toLowerCase());\nvar wrap = (v, idx)=>{\n    return v.map((_, index)=>v[(Math.max(idx, 0) + index) % v.length]);\n};\nfunction getByText(v, text, currentId) {\n    const index = currentId ? indexOfId(v, currentId) : -1;\n    let items = currentId ? wrap(v, index) : v;\n    const isSingleKey = text.length === 1;\n    if (isSingleKey) {\n        items = items.filter((item)=>item.id !== currentId);\n    }\n    return items.find((item)=>match(getValueText(item), text));\n}\n// src/get-by-typeahead.ts\nfunction getByTypeaheadImpl(_items, options) {\n    const { state, activeId, key, timeout = 350 } = options;\n    const search = state.keysSoFar + key;\n    const isRepeated = search.length > 1 && Array.from(search).every((char)=>char === search[0]);\n    const query2 = isRepeated ? search[0] : search;\n    let items = _items.slice();\n    const next = getByText(items, query2, activeId);\n    function cleanup() {\n        clearTimeout(state.timer);\n        state.timer = -1;\n    }\n    function update(value) {\n        state.keysSoFar = value;\n        cleanup();\n        if (value !== \"\") {\n            state.timer = +setTimeout(()=>{\n                update(\"\");\n                cleanup();\n            }, timeout);\n        }\n    }\n    update(search);\n    return next;\n}\nvar getByTypeahead = /* @__PURE__ */ Object.assign(getByTypeaheadImpl, {\n    defaultOptions: {\n        keysSoFar: \"\",\n        timer: -1\n    },\n    isValidEvent: isValidTypeaheadEvent\n});\nfunction isValidTypeaheadEvent(event) {\n    return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\n// src/get-computed-style.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getComputedStyle(el) {\n    if (!styleCache.has(el)) {\n        const win = el.ownerDocument.defaultView || window;\n        styleCache.set(el, win.getComputedStyle(el));\n    }\n    return styleCache.get(el);\n}\n// src/get-event-target.ts\nfunction getEventTarget(event) {\n    return event.composedPath?.()[0] ?? event.target;\n}\n// src/get-scroll-parent.ts\nfunction isScrollParent(el) {\n    const win = el.ownerDocument.defaultView || window;\n    const { overflow, overflowX, overflowY } = win.getComputedStyle(el);\n    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction getParent(el) {\n    if (el.localName === \"html\") return el;\n    return el.assignedSlot || el.parentElement || el.ownerDocument.documentElement;\n}\nfunction getScrollParent(el) {\n    if ([\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].includes(el.localName)) {\n        return el.ownerDocument.body;\n    }\n    if (isHTMLElement(el) && isScrollParent(el)) {\n        return el;\n    }\n    return getScrollParent(getParent(el));\n}\nfunction getScrollParents(el, list = []) {\n    const parent = getScrollParent(el);\n    const isBody = parent === el.ownerDocument.body;\n    const win = parent.ownerDocument.defaultView || window;\n    const target = isBody ? [\n        win\n    ].concat(win.visualViewport || [], isScrollParent(parent) ? parent : []) : parent;\n    const parents = list.concat(target);\n    return isBody ? parents : parents.concat(getScrollParents(getParent(target)));\n}\n// src/is-editable-element.ts\nfunction isEditableElement(el) {\n    if (el == null || !isHTMLElement(el)) {\n        return false;\n    }\n    try {\n        const win = el.ownerDocument.defaultView || window;\n        return el instanceof win.HTMLInputElement && el.selectionStart != null || /(textarea|select)/.test(el.localName) || el.isContentEditable;\n    } catch  {\n        return false;\n    }\n}\n// src/platform.ts\nvar isDom = ()=>typeof document !== \"undefined\";\nfunction getPlatform() {\n    const agent = navigator.userAgentData;\n    return agent?.platform ?? navigator.platform;\n}\nvar pt = (v)=>isDom() && v.test(getPlatform());\nvar ua = (v)=>isDom() && v.test(navigator.userAgent);\nvar vn = (v)=>isDom() && v.test(navigator.vendor);\nvar isTouchDevice = ()=>isDom() && !!navigator.maxTouchPoints;\nvar isMac = ()=>pt(/^Mac/) && !isTouchDevice();\nvar isIPhone = ()=>pt(/^iPhone/);\nvar isSafari = ()=>isApple() && vn(/apple/i);\nvar isFirefox = ()=>ua(/firefox\\//i);\nvar isApple = ()=>pt(/mac|iphone|ipad|ipod/i);\nvar isIos = ()=>isApple() && !isMac();\n// src/query.ts\nfunction queryAll(root, selector) {\n    return Array.from(root?.querySelectorAll(selector) ?? []);\n}\nfunction query(root, selector) {\n    return root?.querySelector(selector);\n}\n// src/raf.ts\nfunction nextTick(fn) {\n    const set = /* @__PURE__ */ new Set();\n    function raf2(fn2) {\n        const id = globalThis.requestAnimationFrame(fn2);\n        set.add(()=>globalThis.cancelAnimationFrame(id));\n    }\n    raf2(()=>raf2(fn));\n    return function cleanup() {\n        set.forEach((fn2)=>fn2());\n    };\n}\nfunction raf(fn) {\n    const id = globalThis.requestAnimationFrame(fn);\n    return ()=>{\n        globalThis.cancelAnimationFrame(id);\n    };\n}\n// src/index.ts\nvar MAX_Z_INDEX = 2147483647;\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@zag-js/focus-visible/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionModality: () => (/* binding */ getInteractionModality),\n/* harmony export */   setInteractionModality: () => (/* binding */ setInteractionModality),\n/* harmony export */   trackFocusVisible: () => (/* binding */ trackFocusVisible),\n/* harmony export */   trackInteractionModality: () => (/* binding */ trackInteractionModality)\n/* harmony export */ });\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/@zag-js/dom-query/dist/index.mjs\");\n// src/index.ts\n\nvar hasSetup = false;\nvar modality = null;\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar handlers = /* @__PURE__ */ new Set();\nfunction trigger(modality2, event) {\n    handlers.forEach((handler)=>handler(modality2, event));\n}\nvar isMac =  false ? 0 : false;\nfunction isValidKey(e) {\n    return !(e.metaKey || !isMac && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nfunction onKeyboardEvent(event) {\n    hasEventBeforeFocus = true;\n    if (isValidKey(event)) {\n        modality = \"keyboard\";\n        trigger(\"keyboard\", event);\n    }\n}\nfunction onPointerEvent(event) {\n    modality = \"pointer\";\n    if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n        hasEventBeforeFocus = true;\n        const target = event.composedPath ? event.composedPath()[0] : event.target;\n        let matches = false;\n        try {\n            matches = target.matches(\":focus-visible\");\n        } catch  {}\n        if (matches) return;\n        trigger(\"pointer\", event);\n    }\n}\nfunction isVirtualClick(event) {\n    if (event.mozInputSource === 0 && event.isTrusted) return true;\n    return event.detail === 0 && !event.pointerType;\n}\nfunction onClickEvent(e) {\n    if (isVirtualClick(e)) {\n        hasEventBeforeFocus = true;\n        modality = \"virtual\";\n    }\n}\nfunction onWindowFocus(event) {\n    if (event.target === window || event.target === document) {\n        return;\n    }\n    if (event.target instanceof Element && event.target.hasAttribute(\"tabindex\")) {\n        return;\n    }\n    if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n        modality = \"virtual\";\n        trigger(\"virtual\", event);\n    }\n    hasEventBeforeFocus = false;\n    hasBlurredWindowRecently = false;\n}\nfunction onWindowBlur() {\n    hasEventBeforeFocus = false;\n    hasBlurredWindowRecently = true;\n}\nfunction isFocusVisible() {\n    return modality !== \"pointer\";\n}\nfunction setupGlobalFocusEvents() {\n    if (!(0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_0__.isDom)() || hasSetup) {\n        return;\n    }\n    const { focus } = HTMLElement.prototype;\n    HTMLElement.prototype.focus = function focusElement(...args) {\n        hasEventBeforeFocus = true;\n        focus.apply(this, args);\n    };\n    document.addEventListener(\"keydown\", onKeyboardEvent, true);\n    document.addEventListener(\"keyup\", onKeyboardEvent, true);\n    document.addEventListener(\"click\", onClickEvent, true);\n    window.addEventListener(\"focus\", onWindowFocus, true);\n    window.addEventListener(\"blur\", onWindowBlur, false);\n    if (typeof PointerEvent !== \"undefined\") {\n        document.addEventListener(\"pointerdown\", onPointerEvent, true);\n        document.addEventListener(\"pointermove\", onPointerEvent, true);\n        document.addEventListener(\"pointerup\", onPointerEvent, true);\n    } else {\n        document.addEventListener(\"mousedown\", onPointerEvent, true);\n        document.addEventListener(\"mousemove\", onPointerEvent, true);\n        document.addEventListener(\"mouseup\", onPointerEvent, true);\n    }\n    hasSetup = true;\n}\nfunction trackFocusVisible(fn) {\n    setupGlobalFocusEvents();\n    fn(isFocusVisible());\n    const handler = ()=>fn(isFocusVisible());\n    handlers.add(handler);\n    return ()=>{\n        handlers.delete(handler);\n    };\n}\nfunction trackInteractionModality(fn) {\n    setupGlobalFocusEvents();\n    fn(modality);\n    const handler = ()=>fn(modality);\n    handlers.add(handler);\n    return ()=>{\n        handlers.delete(handler);\n    };\n}\nfunction setInteractionModality(value) {\n    modality = value;\n    trigger(value, null);\n}\nfunction getInteractionModality() {\n    return modality;\n}\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@zag-js/focus-visible/dist/index.mjs\n");

/***/ })

};
;